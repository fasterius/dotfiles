snippet workflow "Initialise a Nextflow workflow"
	#!/usr/bin/env nextflow

	// Default parameters
	params.resultsdir = "results/"
	params.workdir = "work/"
	params.publish_mode = "copy"

	// Show workflow parameters before execution
	log.info("""    NBIS support #${1:0000}
		==================

		Workflow parameters
			Results directory       : ${params.resultsdir}
			Work directory          : ${params.workdir}
			Resume                  : ${workflow.resume}
			Profile                 : ${workflow.profile}
		""")

	// Main workflow
	workflow {
		PROCESS_01(ch_input)
	}

	// First process
	process PROCESS_01 {
		tag "${input}"
		publishDir "${params.resultsdir}/",
			mode: params.publish_mode

		input:
		path(ch_input)

		output:
		path("output_01")

		script:
		"""
		touch output_01
		"""
	}

snippet process "Add a new Nextflow process"
	process PROCESS_01 {
		tag "${input}"
		publishDir "${params.resultsdir}/",
			mode: params.publish_mode

		input:
		path(ch_input)

		output:
		path("output_01")

		script:
		"""
		touch output_01
		"""
	}

snippet config "Initialise a Nextflow config file"
	// Workflow manifest
	manifest {
		name          = "NBIS support #${1:0000}"
		author        = "Erik Fasterius"
		defaultBranch = "main"
		mainScript    = "main.nf"
	}

	// Parameters
	params {
		resultsdir   = "results/"
		workdir      = "work/"
		publish_mode = "copy"
	}

	// Workflow profiles
	profiles {
		uppmax {
			process {
				executor       = 'slurm'
				clusterOptions = '-A "${2:snic2020999}"'
				memory         = { 6.GB * task.attempt }
				cpus           = { 1 * task.attempt }
				time           = { 10.h * task.attempt }
				scratch        = '$SNIC_TMP'
				errorStrategy  = 'retry'
				maxRetries     = 1
			}
		}
		devel {
			process {
				time           = 1.h
				errorStrategy  = 'terminate'
			}
			executor.queueSize = 1
			process.queue      = 'devel'
		}
	}
